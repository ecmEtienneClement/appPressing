{"version":3,"file":"src_app_modules_employer_employer_module_ts.js","mappings":"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","sources":["./src/app/modules/employer/employer-add-and-upd/employer-add-and-upd.component.ts","./src/app/modules/employer/employer-client/employer-client.component.ts","./src/app/modules/employer/employer-demande-depense/employer-demande-depense.component.ts","./src/app/modules/employer/employer-info/employer-info.component.ts","./src/app/modules/employer/employer-linge/employer-linge.component.ts","./src/app/modules/employer/employer-routing.module.ts","./src/app/modules/employer/employer.module.ts","./src/app/modules/employer/employer.page.ts","./src/app/modules/employer/ngrx/employer.effects.ts","./src/app/modules/employer/ngrx/employers.reducer.ts","./src/app/modules/employer/services.ts/employers.data.service.ts","./src/app/modules/employer/services.ts/employers.resolver.ts","./src/app/modules/employer/services.ts/employers.service.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { UserService } from 'src/app/servicesApp/user.service';\nimport { AdminsActions } from '../../admins/ngrx/admins.actions';\nimport {\n  EntitiesDataState,\n  EnumAddOrUpdFormEntitie,\n} from '../../servicesModules/modules.entitiesDataState';\nimport { EmployersActions } from '../ngrx/employer.action';\nimport { EmployersSelectors } from '../ngrx/employers.selectors';\n\n@Component({\n  selector: 'app-employer-add-and-upd',\n  templateUrl: './employer-add-and-upd.component.html',\n  styleUrls: ['./employer-add-and-upd.component.scss'],\n})\nexport class EmployerAddAndUpdComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  nomEmployer = '...';\n  prenomEmployer = '';\n  updatePwd = false;\n  isUpdate = false;\n  employeUpd: Employe = {\n    nom: '',\n    prenom: '',\n    adresse: '',\n    numero: '',\n    email: '',\n    mdp: '',\n    salaire: 0,\n    AdminId: '',\n  };\n  //\n  formEmployer: FormGroup;\n  constructor(\n    private store: Store<AppState>,\n    private employersActions: EmployersActions,\n    private employersSelectores: EmployersSelectors,\n    private entitiesDataState: EntitiesDataState,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private adminsActions: AdminsActions\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.employersSelectores.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.employersSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.employersSelectores.getMessageError()\n    );\n    this.initForm();\n    //\n    this.switchNameRoute(this.entitiesDataState.getAddOrUpdFormEntitie());\n  }\n  //TODO INIT FORM\n  initForm() {\n    this.formEmployer = this.formBuilder.group({\n      nom: [null, [Validators.required, Validators.pattern('^[a-zA-Z]*$')]],\n      prenom: [null, [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\n      adresse: [\n        null,\n        [Validators.required, Validators.pattern('^[a-zA-Z0-9 ]*$')],\n      ],\n      numero: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n      salaire: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n      email: [null, [Validators.required, Validators.email]],\n      mdp: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('(?=.*[A-z])(?=.*[A-Z])(?=.*[0-9])^[a-zA-Z0-9]*$'),\n        ],\n      ],\n    });\n  }\n\n  //TODO\n  switchNameRoute(nameRouter: EnumAddOrUpdFormEntitie) {\n    switch (nameRouter) {\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        this.store.select(this.employersSelectores.getEntitieById()).subscribe({\n          next: (dataEmploye) => {\n            if (dataEmploye) {\n              this.employeUpd = dataEmploye;\n              this.formEmployer.patchValue({\n                nom: dataEmploye.nom,\n                prenom: dataEmploye.prenom,\n                adresse: dataEmploye.adresse,\n                numero: dataEmploye.numero,\n                salaire: dataEmploye.salaire,\n                email: dataEmploye.email,\n              });\n              this.nomEmployer = dataEmploye.nom;\n              this.prenomEmployer = dataEmploye.prenom;\n              this.isUpdate = true;\n            }\n          },\n          error: (error) => {\n            this.store.dispatch(\n              this.employersActions.errorEntities()({ error })\n            );\n          },\n        });\n        break;\n      case EnumAddOrUpdFormEntitie.addEntitie:\n        this.onUpdatePwd();\n        break;\n    }\n  }\n  //TODO\n  onUpdatePwd() {\n    this.updatePwd = true;\n    this.isUpdate = false;\n  }\n\n  //TODO SUBMIT\n  submitForm() {\n    switch (this.entitiesDataState.getAddOrUpdFormEntitie()) {\n      //ADD\n      case EnumAddOrUpdFormEntitie.addEntitie:\n        const formAddValues = this.formEmployer.value;\n        const newEmployer: Employe = {\n          AdminId: this.userService.getIdUser(),\n          nom: formAddValues.nom,\n          prenom: formAddValues.prenom,\n          adresse: formAddValues.adresse,\n          numero: formAddValues.numero,\n          salaire: formAddValues.salaire,\n          email: formAddValues.email,\n          mdp: formAddValues.mdp,\n        };\n        this.store.dispatch(\n          this.employersActions.addEntitie()({\n            entitie: newEmployer,\n            onNavAfterAdd: true,\n          })\n        );\n        this.store.dispatch(this.adminsActions.getAllEntities()());\n        break;\n      //UPD\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        const formUpdValues = this.formEmployer.value;\n        const updClient: Employe = {\n          AdminId: this.employeUpd.AdminId,\n          id: this.employeUpd.id,\n          nom: formUpdValues.nom,\n          prenom: formUpdValues.prenom,\n          adresse: formUpdValues.adresse,\n          numero: formUpdValues.numero,\n          email: formUpdValues.email,\n          mdp: this.employeUpd.mdp,\n          salaire: formUpdValues.salaire,\n          role: this.employeUpd.role,\n          Clients: this.employeUpd.Clients,\n          Linges: this.employeUpd.Linges,\n          Demande_depenses: this.employeUpd.Demande_depenses,\n          createdAt: this.employeUpd.createdAt,\n          updatedAt: this.employeUpd.updatedAt,\n        };\n        this.store.dispatch(\n          this.employersActions.updEntitie()({\n            entitie: updClient,\n          })\n        );\n        break;\n      //DEF\n      default:\n        this.store.dispatch(\n          this.employersActions.errorEntities()({\n            error: 'Erreur critique! Veillez nous le signaler',\n          })\n        );\n        break;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EmployersSelectors } from '../ngrx/employers.selectors';\n\n@Component({\n  selector: 'app-employer-client',\n  templateUrl: './employer-client.component.html',\n  styleUrls: ['./employer-client.component.scss'],\n})\nexport class EmployerClientComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  employer$: Observable<Employe> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly appStateEnum = AppStateEnum;\n\n  constructor(\n    private store: Store<AppState>,\n    private employersSelectores: EmployersSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.employersSelectores.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.employersSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.employersSelectores.getMessageError()\n    );\n    this.employer$ = this.store.select(\n      this.employersSelectores.getEntitieById()\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EmployersSelectors } from '../ngrx/employers.selectors';\n\n@Component({\n  selector: 'app-employer-demande-depense',\n  templateUrl: './employer-demande-depense.component.html',\n  styleUrls: ['./employer-demande-depense.component.scss'],\n})\nexport class EmployerDemandeDepenseComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  employer$: Observable<Employe> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly appStateEnum = AppStateEnum;\n\n  constructor(\n    private store: Store<AppState>,\n    private employersSelectores: EmployersSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.employersSelectores.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.employersSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.employersSelectores.getMessageError()\n    );\n    this.employer$ = this.store.select(\n      this.employersSelectores.getEntitieById()\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { EmployersSelectors } from '../ngrx/employers.selectors';\nimport { EmployerService } from '../services.ts/employers.service';\n\n@Component({\n  selector: 'app-employer-info',\n  templateUrl: './employer-info.component.html',\n  styleUrls: ['./employer-info.component.scss'],\n})\nexport class EmployerInfoComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  employe$: Observable<Employe> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n  constructor(\n    private store: Store<AppState>,\n    private employerService: EmployerService,\n    private employersSelectores: EmployersSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.employersSelectores.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.employersSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.employersSelectores.getMessageError()\n    );\n    this.employe$ = this.store.select(\n      this.employersSelectores.getEntitieById()\n    );\n  }\n\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idEmploye?: string\n  ) {\n    this.employerService.onNav(whereNav, routeParam, idEmploye);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EmployersSelectors } from '../ngrx/employers.selectors';\n\n@Component({\n  selector: 'app-employer-linge',\n  templateUrl: './employer-linge.component.html',\n  styleUrls: ['./employer-linge.component.scss'],\n})\nexport class EmployerLingeComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  employer$: Observable<Employe> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly appStateEnum = AppStateEnum;\n\n  constructor(\n    private store: Store<AppState>,\n    private employersSelectores: EmployersSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.employersSelectores.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.employersSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.employersSelectores.getMessageError()\n    );\n    this.employer$ = this.store.select(\n      this.employersSelectores.getEntitieById()\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { AdminAuthorization } from 'src/app/servicesApp/admin.authorization';\nimport { EmployerAddAndUpdComponent } from './employer-add-and-upd/employer-add-and-upd.component';\nimport { EmployerClientComponent } from './employer-client/employer-client.component';\nimport { EmployerDemandeDepenseComponent } from './employer-demande-depense/employer-demande-depense.component';\nimport { EmployerInfoComponent } from './employer-info/employer-info.component';\nimport { EmployerLingeComponent } from './employer-linge/employer-linge.component';\nimport { EmployerPage } from './employer.page';\nimport { EmployersResolver } from './services.ts/employers.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployerPage,\n  },\n  {\n    path: `${RoutesNames.employersInfo}/:id`,\n    resolve: { employersResolver: EmployersResolver },\n    component: EmployerInfoComponent,\n  },\n  {\n    path: `${RoutesNames.employersAdd}`,\n    canActivate: [AdminAuthorization],\n    resolve: { employersResolver: EmployersResolver },\n    component: EmployerAddAndUpdComponent,\n  },\n  {\n    path: `${RoutesNames.employersUpd}/:id`,\n    canActivate: [AdminAuthorization],\n    resolve: { employersResolver: EmployersResolver },\n    component: EmployerAddAndUpdComponent,\n  },\n  {\n    path: `${RoutesNames.employersLinges}/:id`,\n    resolve: { employersResolver: EmployersResolver },\n    component: EmployerLingeComponent,\n  },\n  {\n    path: `${RoutesNames.employersClients}/:id`,\n    resolve: { employersResolver: EmployersResolver },\n    component: EmployerClientComponent,\n  },\n  {\n    path: `${RoutesNames.employersDmdDepense}/:id`,\n    resolve: { employersResolver: EmployersResolver },\n    component: EmployerDemandeDepenseComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmployerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { EmployerPageRoutingModule } from './employer-routing.module';\nimport { EmployerPage } from './employer.page';\nimport { EmployesDataService } from './services.ts/employers.data.service';\nimport { StoreModule } from '@ngrx/store';\nimport { EmployersEffects } from './ngrx/employer.effects';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\nimport { EmployerInfoComponent } from './employer-info/employer-info.component';\nimport { EmployerAddAndUpdComponent } from './employer-add-and-upd/employer-add-and-upd.component';\nimport { EmployerLingeComponent } from './employer-linge/employer-linge.component';\nimport { EmployerClientComponent } from './employer-client/employer-client.component';\nimport { EmployerDemandeDepenseComponent } from './employer-demande-depense/employer-demande-depense.component';\nimport { EmployerService } from './services.ts/employers.service';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { GetEmployersReducer } from './ngrx/employers.reducer';\nimport { EmployersResolver } from './services.ts/employers.resolver';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    EmployerPageRoutingModule,\n    StoreModule.forFeature(\n      NameStateEntities.employer,\n      GetEmployersReducer.getReducer\n    ),\n    EffectsModule.forFeature([EmployersEffects]),\n    ShearedModulesModule,\n  ],\n  declarations: [\n    EmployerPage,\n    EmployerInfoComponent,\n    EmployerAddAndUpdComponent,\n    EmployerLingeComponent,\n    EmployerDemandeDepenseComponent,\n    EmployerClientComponent,\n  ],\n  providers: [EmployesDataService, EmployerService, EmployersResolver],\n})\nexport class EmployerPageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EmployersActions } from './ngrx/employer.action';\nimport { EmployersSelectors } from './ngrx/employers.selectors';\nimport { EmployerService } from './services.ts/employers.service';\nimport { WhereNavEntities } from '../servicesModules/modules.service';\n\n@Component({\n  selector: 'app-employer',\n  templateUrl: './employer.page.html',\n  styleUrls: ['./employer.page.scss'],\n})\nexport class EmployerPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent) content: IonContent;\n\n  employesInit: Employe[];\n  employes: Employe[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n  readonly appStateEnum = AppStateEnum;\n  constructor(\n    public store: Store<AppState>,\n    private employersActions: EmployersActions,\n    private employerSelectors: EmployersSelectors,\n    private employerService: EmployerService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.employersActions.getAllEntities()());\n    this.subEmployes();\n    this.dataState$ = this.store.select(this.employerSelectors.getDataState());\n    this.notification$ = this.store.select(\n      this.employerSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.employerSelectors.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA EMPLOYER\n  subEmployes() {\n    this.sub.add(\n      this.store.select(this.employerSelectors.getEntities()).subscribe({\n        next: (employes) => {\n          if (employes) {\n            this.employesInit = employes;\n            this.employes = employes;\n          }\n        },\n      })\n    );\n  }\n  //TODO SEARCH\n  handleChange(event: any) {\n    const querySearch = event.target.value.toLowerCase();\n    this.employes = this.employesInit.filter(\n      (employe) => employe.prenom.toLowerCase().indexOf(querySearch) > -1\n    );\n  }\n  //TODO SCROLL\n  scrollToTop() {\n    this.content.scrollToTop(500);\n  }\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idEmploye?: string\n  ) {\n    this.employerService.onNav(whereNav, routeParam, idEmploye);\n  }\n  //TODO DELETE CLIENT\n  onDeleteEmploye(idEmploye: string) {\n    this.store.dispatch(\n      this.employersActions.deleteEntitie()({ idEntitie: idEmploye })\n    );\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from '../../servicesModules/modules.ngrx.effects';\nimport { EmployerService } from '../services.ts/employers.service';\nimport { EmployesDataService } from '../services.ts/employers.data.service';\nimport { EmployersActions } from './employer.action';\n\n@Injectable()\nexport class EmployersEffects extends EntitiesEffects<Employe> {\n  constructor(\n    store: Store,\n\n    action$: Actions,\n    employersActions: EmployersActions,\n    employersDataService: EmployesDataService,\n    employerService: EmployerService,\n  ) {\n    super(\n      store,\n      action$,\n      employersActions,\n      employersDataService,\n      employerService,\n    );\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from '../../servicesModules/modules.ngrx.reducer';\nimport { EmployersActions } from './employer.action';\nimport { IEmployersState } from './employers.state';\n\nclass EmployersReducer extends EntitiesReducer<Employe, IEmployersState> {\n  constructor(employersActions: EmployersActions) {\n    super(employersActions, 'employer');\n  }\n}\nexport class GetEmployersReducer {\n  private static intanceEmployerReducer: EmployersReducer = null;\n  //TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\n  public static getReducer(state: IEmployersState, action: Action) {\n    if (GetEmployersReducer.intanceEmployerReducer == null) {\n      GetEmployersReducer.intanceEmployerReducer = new EmployersReducer(\n        new EmployersActions()\n      );\n    }\n    return GetEmployersReducer.intanceEmployerReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { EntitiesDataService } from '../../servicesModules/modules.data.service';\n\n@Injectable()\nexport class EmployesDataService extends EntitiesDataService<Employe> {\n  constructor(httpClient: HttpClient) {\n    super(httpClient, NameUrlEntitiesAPI.employers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/appState/app.state';\nimport { Employe } from 'src/app/models/models.interfaces';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesResolver } from '../../servicesModules/modules.entitiesResolver';\nimport { EmployersActions } from '../ngrx/employer.action';\nimport { EmployersSelectors } from '../ngrx/employers.selectors';\nimport { IEmployersState } from '../ngrx/employers.state';\n\n@Injectable()\nexport class EmployersResolver extends EntitiesResolver<\n  Employe,\n  IEmployersState\n> {\n  constructor(\n    store: Store<AppState>,\n    employersActions: EmployersActions,\n    employersSelectors: EmployersSelectors,\n    entitiesDataState: EntitiesDataState\n  ) {\n    super(store, employersActions, employersSelectors, entitiesDataState);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from '../../servicesModules/modules.service';\n\n@Injectable()\nexport class EmployerService extends EntitiesService {\n  constructor(router: Router, entitiesDataState: EntitiesDataState) {\n    //RoutesNames.clients definition de la route de base\n    super(router, RoutesNames.employers, entitiesDataState);\n    //setRoute definition de la route pour la redirection\n    this.setRouteParam(RoutesNames.employersInfo);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}