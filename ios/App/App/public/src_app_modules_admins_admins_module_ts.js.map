{"version":3,"file":"src_app_modules_admins_admins_module_ts.js","mappings":"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","sources":["./src/app/modules/admins/admins-add-and-upd/admins-add-and-upd.component.ts","./src/app/modules/admins/admins-cmp-bloquer/admins-cmp-bloquer.component.ts","./src/app/modules/admins/admins-empoyer/admins-empoyer.component.ts","./src/app/modules/admins/admins-fac-dmd-dep/admins-fac-dmd-dep.component.ts","./src/app/modules/admins/admins-info/admins-info.component.ts","./src/app/modules/admins/admins-routing.module.ts","./src/app/modules/admins/admins.module.ts","./src/app/modules/admins/admins.page.ts","./src/app/modules/admins/ngrx/admins.effects.ts","./src/app/modules/admins/ngrx/admins.reducer.ts","./src/app/modules/admins/services/admins.data.service.ts","./src/app/modules/admins/services/admins.resolver.ts","./src/app/modules/admins/services/admins.service.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport {\n  EntitiesDataState,\n  EnumAddOrUpdFormEntitie,\n} from '../../servicesModules/modules.entitiesDataState';\nimport { AdminsActions } from '../ngrx/admins.actions';\nimport { AdminsSelectors } from '../ngrx/admins.selectors';\n\n@Component({\n  selector: 'app-admins-add-and-upd',\n  templateUrl: './admins-add-and-upd.component.html',\n  styleUrls: ['./admins-add-and-upd.component.scss'],\n})\nexport class AdminsAddAndUpdComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  updatePwd = false;\n  isUpdate = false;\n  nomAdmin = '...';\n  prenomAdmin = '';\n  AdminUpd: Admin = {\n    nom: '',\n    prenom: '',\n    numero: '',\n    email: '',\n    mdp: '',\n  };\n  //\n  formAdmin: FormGroup;\n  constructor(\n    private store: Store<AppState>,\n    private adminsActions: AdminsActions,\n    private adminsSelectores: AdminsSelectors,\n    private entitiesDataState: EntitiesDataState,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(this.adminsSelectores.getDataState());\n    this.notification$ = this.store.select(\n      this.adminsSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.adminsSelectores.getMessageError()\n    );\n    this.initForm();\n    //\n    this.switchNameRoute(this.entitiesDataState.getAddOrUpdFormEntitie());\n  }\n  //TODO INIT FORM\n  initForm() {\n    this.formAdmin = this.formBuilder.group({\n      nom: [null, [Validators.required, Validators.pattern('^[a-zA-Z]*$')]],\n      prenom: [null, [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\n      numero: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n      email: [null, [Validators.required, Validators.email]],\n      mdp: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('(?=.*[A-z])(?=.*[A-Z])(?=.*[0-9])^[a-zA-Z0-9]*$'),\n        ],\n      ],\n    });\n  }\n\n  //TODO\n  switchNameRoute(nameRouter: EnumAddOrUpdFormEntitie) {\n    switch (nameRouter) {\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        this.store.select(this.adminsSelectores.getEntitieById()).subscribe({\n          next: (dataEmploye) => {\n            if (dataEmploye) {\n              this.AdminUpd = dataEmploye;\n              this.formAdmin.patchValue({\n                nom: dataEmploye.nom,\n                prenom: dataEmploye.prenom,\n                numero: dataEmploye.numero,\n                email: dataEmploye.email,\n                mdp: dataEmploye.mdp,\n              });\n              this.nomAdmin = dataEmploye.nom;\n              this.prenomAdmin = dataEmploye.prenom;\n              this.isUpdate = true;\n            }\n          },\n          error: (error) => {\n            this.store.dispatch(this.adminsActions.errorEntities()({ error }));\n          },\n        });\n        break;\n      case EnumAddOrUpdFormEntitie.addEntitie:\n        this.onUpdatePwd();\n        break;\n    }\n  }\n  //TODO\n  onUpdatePwd() {\n    this.updatePwd = true;\n    this.isUpdate = false;\n  }\n\n  //TODO SUBMIT\n  submitForm() {\n    switch (this.entitiesDataState.getAddOrUpdFormEntitie()) {\n      //ADD\n      case EnumAddOrUpdFormEntitie.addEntitie:\n        const formAddValues = this.formAdmin.value;\n        const newAdmin: Admin = {\n          nom: formAddValues.nom,\n          prenom: formAddValues.prenom,\n          numero: formAddValues.numero,\n          email: formAddValues.email,\n          mdp: formAddValues.mdp,\n        };\n        this.store.dispatch(\n          this.adminsActions.addEntitie()({\n            entitie: newAdmin,\n            onNavAfterAdd: true,\n          })\n        );\n        break;\n      //UPD\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        const formUpdValues = this.formAdmin.value;\n        const updAdmin: Admin = {\n          id: this.AdminUpd.id,\n          nom: formUpdValues.nom,\n          prenom: formUpdValues.prenom,\n          numero: formUpdValues.numero,\n          email: formUpdValues.email,\n         // mdp: formUpdValues.mdp,\n          role: this.AdminUpd.role,\n          Compte_bloquers: this.AdminUpd.Compte_bloquers,\n          Demande_depenses: this.AdminUpd.Demande_depenses,\n          Factures: this.AdminUpd.Factures,\n          createdAt: this.AdminUpd.createdAt,\n          updatedAt: this.AdminUpd.updatedAt,\n        };\n        this.store.dispatch(\n          this.adminsActions.updEntitie()({\n            entitie: updAdmin,\n          })\n        );\n        break;\n      //DEF\n      default:\n        this.store.dispatch(\n          this.adminsActions.errorEntities()({\n            error: 'Erreur critique! Veillez nous le signaler',\n          })\n        );\n        break;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { AdminsSelectors } from '../ngrx/admins.selectors';\nimport { AdminsService } from '../services/admins.service';\n\n@Component({\n  selector: 'app-admins-cmp-bloquer',\n  templateUrl: './admins-cmp-bloquer.component.html',\n  styleUrls: ['./admins-cmp-bloquer.component.scss'],\n})\nexport class AdminsCmpBloquerComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  admin$: Observable<Admin> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly appStateEnum = AppStateEnum;\n  constructor(\n    private store: Store<AppState>,\n    private adminService: AdminsService,\n    private adminsSelectorsService: AdminsSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.adminsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.adminsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.adminsSelectorsService.getMessageError()\n    );\n    this.admin$ = this.store.select(\n      this.adminsSelectorsService.getEntitieById()\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { AdminsSelectors } from '../ngrx/admins.selectors';\n\n@Component({\n  selector: 'app-admins-empoyer',\n  templateUrl: './admins-empoyer.component.html',\n  styleUrls: ['./admins-empoyer.component.scss'],\n})\nexport class AdminsEmpoyerComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  admin$: Observable<Admin> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly appStateEnum = AppStateEnum;\n  readonly whereNav = WhereNavEntities;\n  constructor(\n    private store: Store<AppState>,\n    private adminsSelectorsService: AdminsSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.adminsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.adminsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.adminsSelectorsService.getMessageError()\n    );\n    this.admin$ = this.store.select(\n      this.adminsSelectorsService.getEntitieById()\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Admin, DemandeDepense } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { AdminsSelectors } from '../ngrx/admins.selectors';\n\n@Component({\n  selector: 'app-admins-fac-dmd-dep',\n  templateUrl: './admins-fac-dmd-dep.component.html',\n  styleUrls: ['./admins-fac-dmd-dep.component.scss'],\n})\nexport class AdminsFacDmdDepComponent implements OnInit {\n  demande = false;\n  depense = false;\n  facture = true;\n\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  admin$: Observable<Admin> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  depenses: DemandeDepense[];\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n  readonly appStateEnum = AppStateEnum;\n  constructor(\n    private store: Store<AppState>,\n    private adminsSelectorsService: AdminsSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.adminsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.adminsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.adminsSelectorsService.getMessageError()\n    );\n    this.admin$ = this.store.select(\n      this.adminsSelectorsService.getEntitieById()\n    );\n    this.onSubAdminDmd();\n  }\n\n  //TODO SUB DMD\n  onSubAdminDmd() {\n    this.store.select(this.adminsSelectorsService.getEntitieById()).subscribe({\n      next: (dataAdmin) => {\n        if (dataAdmin) {\n          this.depenses = dataAdmin.Demande_depenses.filter(\n            (dmd) => dmd.valider === true\n          );\n        }\n      },\n    });\n  }\n  //TODO\n  onSegement(whereContainer: string) {\n    switch (whereContainer) {\n      case 'dmd':\n        this.demande = true;\n        this.depense = false;\n        this.facture = false;\n        break;\n      case 'dep':\n        this.depense = true;\n        this.demande = false;\n        this.facture = false;\n        break;\n      case 'fac':\n        this.facture = true;\n        this.demande = false;\n        this.depense = false;\n        break;\n\n      default:\n        this.demande = true;\n        this.depense = false;\n        this.facture = false;\n        break;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { AdminsSelectors } from '../ngrx/admins.selectors';\nimport { AdminsService } from '../services/admins.service';\n\n@Component({\n  selector: 'app-admins-info',\n  templateUrl: './admins-info.component.html',\n  styleUrls: ['./admins-info.component.scss'],\n})\nexport class AdminsInfoComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  admin$: Observable<Admin> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n    readonly whereNav = WhereNavEntities;\n  constructor(\n    private store: Store<AppState>,\n    private adminService: AdminsService,\n    private adminsSelectorsService: AdminsSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.adminsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.adminsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.adminsSelectorsService.getMessageError()\n    );\n    this.admin$ = this.store.select(\n      this.adminsSelectorsService.getEntitieById()\n    );\n  }\n\n  //TODO NAVIGATION CLIENT\n  onNavUpdate(idAdmin: string) {\n    this.adminService.onNav(\n      WhereNavEntities.updEntitie,\n      RoutesNames.adminsUpd,\n      idAdmin\n    );\n  }\n   //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idEmploye?: string\n  ) {\n    this.adminService.onNav(whereNav, routeParam, idEmploye);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { AdminsAddAndUpdComponent } from './admins-add-and-upd/admins-add-and-upd.component';\nimport { AdminsCmpBloquerComponent } from './admins-cmp-bloquer/admins-cmp-bloquer.component';\nimport { AdminsEmpoyerComponent } from './admins-empoyer/admins-empoyer.component';\nimport { AdminsFacDmdDepComponent } from './admins-fac-dmd-dep/admins-fac-dmd-dep.component';\nimport { AdminsInfoComponent } from './admins-info/admins-info.component';\nimport { AdminsPage } from './admins.page';\nimport { AdminsResolver } from './services/admins.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminsPage,\n  },\n  {\n    path: `${RoutesNames.adminsAdd}`,\n    component: AdminsAddAndUpdComponent,\n  },\n  {\n    path: `${RoutesNames.adminsUpd}/:id`,\n    resolve: { adminResolve: AdminsResolver },\n    component: AdminsAddAndUpdComponent,\n  },\n  {\n    path: `${RoutesNames.adminsInfo}/:id`,\n    resolve: { adminResolve: AdminsResolver },\n    component: AdminsInfoComponent,\n  },\n  {\n    path: `${RoutesNames.adminsEmployers}/:id`,\n    resolve: { adminResolve: AdminsResolver },\n    component: AdminsEmpoyerComponent,\n  },\n  {\n    path: `${RoutesNames.adminsCmtBloquer}/:id`,\n    resolve: { adminResolve: AdminsResolver },\n    component: AdminsCmpBloquerComponent,\n  },\n\n  {\n    path: `${RoutesNames.adminsFacDepDmd}/:id`,\n    resolve: { adminResolve: AdminsResolver },\n    component: AdminsFacDmdDepComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { AdminsPageRoutingModule } from './admins-routing.module';\nimport { AdminsPage } from './admins.page';\nimport { AdminsDataService } from './services/admins.data.service';\nimport { AdminsService } from './services/admins.service';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AdminsEffects } from './ngrx/admins.effects';\nimport { StoreModule } from '@ngrx/store';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { GetAdminsReducer } from './ngrx/admins.reducer';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\nimport { AdminsInfoComponent } from './admins-info/admins-info.component';\nimport { AdminsEmpoyerComponent } from './admins-empoyer/admins-empoyer.component';\nimport { AdminsCmpBloquerComponent } from './admins-cmp-bloquer/admins-cmp-bloquer.component';\nimport { AdminsAddAndUpdComponent } from './admins-add-and-upd/admins-add-and-upd.component';\nimport { AdminsFacDmdDepComponent } from './admins-fac-dmd-dep/admins-fac-dmd-dep.component';\nimport { AdminsResolver } from './services/admins.resolver';\n\n@NgModule({\n  imports: [\n    ShearedModulesModule,\n    AdminsPageRoutingModule,\n    StoreModule.forFeature(\n      NameStateEntities.admin,\n      GetAdminsReducer.getReducer\n    ),\n    EffectsModule.forFeature([AdminsEffects]),\n  ],\n  declarations: [\n    AdminsPage,\n    AdminsAddAndUpdComponent,\n    AdminsInfoComponent,\n    AdminsEmpoyerComponent,\n    AdminsCmpBloquerComponent,\n    AdminsFacDmdDepComponent,\n  ],\n  providers: [AdminsDataService, AdminsService, AdminsResolver],\n})\nexport class AdminsPageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../servicesModules/modules.service';\nimport { AdminsActions } from './ngrx/admins.actions';\nimport { AdminsSelectors } from './ngrx/admins.selectors';\nimport { AdminsService } from './services/admins.service';\n\n@Component({\n  selector: 'app-admins',\n  templateUrl: './admins.page.html',\n  styleUrls: ['./admins.page.scss'],\n})\nexport class AdminsPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent) content: IonContent;\n\n  adminInit: Admin[];\n  admins: Admin[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly appStateEnum = AppStateEnum;\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n\n  constructor(\n    private store: Store<AppState>,\n    private adminsActions: AdminsActions,\n    private adminsSelectors: AdminsSelectors,\n    private adminsService: AdminsService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.adminsActions.getAllEntities()());\n    this.subAdmins();\n    this.dataState$ = this.store.select(this.adminsSelectors.getDataState());\n    this.notification$ = this.store.select(\n      this.adminsSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.adminsSelectors.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA ADMIN\n  subAdmins() {\n    this.sub.add(\n      this.store.select(this.adminsSelectors.getEntities()).subscribe({\n        next: (admins) => {\n          if (admins) {\n            this.adminInit = admins;\n            this.admins = admins;\n          }\n        },\n      })\n    );\n  }\n  //TODO SEARCH\n  handleChange(event: any) {\n    const querySearch = event.target.value.toLowerCase();\n    this.admins = this.adminInit.filter(\n      (admin) => admin.prenom.toLowerCase().indexOf(querySearch) > -1\n    );\n  }\n  //TODO SCROLL\n  scrollToTop() {\n    this.content.scrollToTop(500);\n  }\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idAdmin?: string\n  ) {\n    this.adminsService.onNav(whereNav, routeParam, idAdmin);\n  }\n  //TODO DELETE ADMIN\n  onDeleteAdmin(idAdmin: string) {\n    this.store.dispatch(\n      this.adminsActions.deleteEntitie()({ idEntitie: idAdmin })\n    );\n  }\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from '../../servicesModules/modules.ngrx.effects';\nimport { AdminsDataService } from '../services/admins.data.service';\nimport { AdminsService } from '../services/admins.service';\nimport { AdminsActions } from './admins.actions';\n\n@Injectable()\nexport class AdminsEffects extends EntitiesEffects<Admin> {\n  constructor(\n    store: Store,\n    action$: Actions,\n    adminsActions: AdminsActions,\n    adminsDataService: AdminsDataService,\n    adminsService: AdminsService\n  ) {\n    super(store, action$, adminsActions, adminsDataService, adminsService);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from '../../servicesModules/modules.ngrx.reducer';\nimport { AdminsActions } from './admins.actions';\nimport { IAdminState } from './admins.state';\n\nclass AdminsReducer extends EntitiesReducer<Admin, IAdminState> {\n  constructor(adminsActions: AdminsActions) {\n    super(adminsActions, 'admin');\n  }\n}\n\n//TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\nexport class GetAdminsReducer {\n  private static intanceAdminReducer: AdminsReducer = null;\n  public static getReducer(state: IAdminState, action: Action) {\n    if (GetAdminsReducer.intanceAdminReducer == null) {\n      GetAdminsReducer.intanceAdminReducer = new AdminsReducer(\n        new AdminsActions()\n      );\n    }\n    return GetAdminsReducer.intanceAdminReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { Admin } from 'src/app/models/models.interfaces';\n\nimport { EntitiesDataService } from '../../servicesModules/modules.data.service';\n\n@Injectable()\nexport class AdminsDataService extends EntitiesDataService<Admin> {\n  constructor(httpClient: HttpClient) {\n       super(httpClient, NameUrlEntitiesAPI.admins);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/appState/app.state';\nimport { Admin } from 'src/app/models/models.interfaces';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesResolver } from '../../servicesModules/modules.entitiesResolver';\nimport { AdminsActions } from '../ngrx/admins.actions';\nimport { AdminsSelectors } from '../ngrx/admins.selectors';\nimport { IAdminState } from '../ngrx/admins.state';\n\n@Injectable()\nexport class AdminsResolver extends EntitiesResolver<Admin, IAdminState> {\n  constructor(\n    store: Store<AppState>,\n    adminsActions: AdminsActions,\n    adminsSelectors: AdminsSelectors,\n    entitiesDataState: EntitiesDataState\n  ) {\n    super(store, adminsActions, adminsSelectors, entitiesDataState);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from '../../servicesModules/modules.service';\n\n@Injectable()\nexport class AdminsService extends EntitiesService {\n  constructor(router: Router, entitiesDataState: EntitiesDataState) {\n    super(router, RoutesNames.admins, entitiesDataState);\n    this.setRouteParam(RoutesNames.adminsInfo);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}