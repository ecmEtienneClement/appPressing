{"version":3,"file":"src_app_modules_cmp-bloques_cmp-bloques_module_ts.js","mappings":"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","sources":["./src/app/modules/cmp-bloques/cmp-bloques-add/cmp-bloques-add.component.ts","./src/app/modules/cmp-bloques/cmp-bloques-info/cmp-bloques-info.component.ts","./src/app/modules/cmp-bloques/cmp-bloques-routing.module.ts","./src/app/modules/cmp-bloques/cmp-bloques.module.ts","./src/app/modules/cmp-bloques/cmp-bloques.page.ts","./src/app/modules/cmp-bloques/ngrx/cmpBloques.effects.ts","./src/app/modules/cmp-bloques/ngrx/cmpBloques.reducer.ts","./src/app/modules/cmp-bloques/services/cmpBloques.data.service.ts","./src/app/modules/cmp-bloques/services/cmpBloques.resolver.ts","./src/app/modules/cmp-bloques/services/cmpBloques.service.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Compte_bloquer, Employe } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { UserService } from 'src/app/servicesApp/user.service';\nimport { EmployersActions } from '../../employer/ngrx/employer.action';\nimport { EmployersSelectors } from '../../employer/ngrx/employers.selectors';\nimport { CmpBloquesActions } from '../ngrx/cmpBloques.actions';\nimport { CmpBloquesSelectors } from '../ngrx/cmpBloques.selectors';\n\n@Component({\n  selector: 'app-cmp-bloques-add',\n  templateUrl: './cmp-bloques-add.component.html',\n  styleUrls: ['./cmp-bloques-add.component.scss'],\n})\nexport class CmpBloquesAddComponent implements OnInit, OnDestroy {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n\n  readonly routesNames = RoutesNames;\n  employes: Employe[];\n  factureUpd: Compte_bloquer = {\n    byAdmin: true,\n    email: '',\n    EmployeId: '',\n  };\n  //\n  formCmpBloque: FormGroup;\n  constructor(\n    private store: Store<AppState>,\n    private cmpBloquesActions: CmpBloquesActions,\n    private cmpBloquesSelectores: CmpBloquesSelectors,\n    private formBuilder: FormBuilder,\n    private employersActions: EmployersActions,\n    private employerSelectors: EmployersSelectors,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.cmpBloquesSelectores.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.cmpBloquesSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.cmpBloquesSelectores.getMessageError()\n    );\n    this.store.dispatch(this.employersActions.getAllEntities()());\n\n    this.initForm();\n    this.subEmployes();\n  }\n  //TODO INIT FORM\n  initForm() {\n    this.formCmpBloque = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.email]],\n    });\n  }\n\n  //TODO SUBS AUX DATA EMPLOYER\n  subEmployes() {\n    this.sub.add(\n      this.store.select(this.employerSelectors.getEntities()).subscribe({\n        next: (employes) => {\n          if (employes) {\n            this.employes = employes;\n          }\n        },\n      })\n    );\n  }\n\n  //TODO SUBMIT\n  submitForm() {\n    const email = this.formCmpBloque.value.email;\n    const employer: Employe = this.employes.find(\n      (employe) => employe.email === email\n    );\n    if (employer === undefined) {\n      this.store.dispatch(\n        this.employersActions.errorEntities()({\n          // eslint-disable-next-line @typescript-eslint/quotes\n          error: \"Une erreur s'est produit veillez réessayer\",\n        })\n      );\n    } else {\n      const newCmpBloque: Compte_bloquer = {\n        byAdmin: true,\n        email,\n        EmployeId: employer.id,\n        AdminId: this.userService.getIdUser(),\n      };\n      this.store.dispatch(\n        this.cmpBloquesActions.addEntitie()({\n          entitie: newCmpBloque,\n          onNavAfterAdd: true,\n        })\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Compte_bloquer } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { CmpBloquesActions } from '../ngrx/cmpBloques.actions';\nimport { CmpBloquesSelectors } from '../ngrx/cmpBloques.selectors';\n\n@Component({\n  selector: 'app-cmp-bloques-info',\n  templateUrl: './cmp-bloques-info.component.html',\n  styleUrls: ['./cmp-bloques-info.component.scss'],\n})\nexport class CmpBloquesInfoComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  cmpBloques$: Observable<Compte_bloquer> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  constructor(\n    private store: Store<AppState>,\n    private cmpBloquesSelectorsService: CmpBloquesSelectors,\n    private cmpBloquesActionsService: CmpBloquesActions\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.cmpBloquesSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.cmpBloquesSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.cmpBloquesSelectorsService.getMessageError()\n    );\n    this.cmpBloques$ = this.store.select(\n      this.cmpBloquesSelectorsService.getEntitieById()\n    );\n  }\n  //TODO DELETE COMPTE\n\n  onDeleteCmtBloquer(idCmtBloquer: string) {\n    this.store.dispatch(\n      this.cmpBloquesActionsService.deleteEntitie()({\n        idEntitie: idCmtBloquer,\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { CmpBloquesAddComponent } from './cmp-bloques-add/cmp-bloques-add.component';\nimport { CmpBloquesInfoComponent } from './cmp-bloques-info/cmp-bloques-info.component';\n\nimport { CmpBloquesPage } from './cmp-bloques.page';\nimport { CmpBloquesResolver } from './services/cmpBloques.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CmpBloquesPage,\n  },\n  {\n    path: `${RoutesNames.cmpBloquesInfo}/:id`,\n    resolve: { cmpBloqueResolver: CmpBloquesResolver },\n    component: CmpBloquesInfoComponent,\n  },\n  {\n    path: `${RoutesNames.cmpBloquesAdd}`,\n    component: CmpBloquesAddComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CmpBloquesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CmpBloquesPageRoutingModule } from './cmp-bloques-routing.module';\nimport { CmpBloquesPage } from './cmp-bloques.page';\nimport { CmpBloquesDataService } from './services/cmpBloques.data.service';\nimport { CmpBloquesService } from './services/cmpBloques.service';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CmpBloquesEffects } from './ngrx/cmpBloques.effects';\nimport { StoreModule } from '@ngrx/store';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { GetCmpBloquesReducer } from './ngrx/cmpBloques.reducer';\nimport { CmpBloquesInfoComponent } from './cmp-bloques-info/cmp-bloques-info.component';\nimport { CmpBloquesAddComponent } from './cmp-bloques-add/cmp-bloques-add.component';\nimport { CmpBloquesResolver } from './services/cmpBloques.resolver';\n\n@NgModule({\n  imports: [\n    ShearedModulesModule,\n    StoreModule.forFeature(\n      NameStateEntities.cmpBloque,\n      GetCmpBloquesReducer.getReducer\n    ),\n    EffectsModule.forFeature([CmpBloquesEffects]),\n    CmpBloquesPageRoutingModule,\n  ],\n  declarations: [\n    CmpBloquesPage,\n    CmpBloquesInfoComponent,\n    CmpBloquesAddComponent,\n  ],\n  providers: [CmpBloquesDataService, CmpBloquesService, CmpBloquesResolver],\n})\nexport class CmpBloquesPageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Compte_bloquer } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../servicesModules/modules.service';\nimport { CmpBloquesActions } from './ngrx/cmpBloques.actions';\nimport { CmpBloquesSelectors } from './ngrx/cmpBloques.selectors';\nimport { CmpBloquesService } from './services/cmpBloques.service';\n\n@Component({\n  selector: 'app-cmp-bloques',\n  templateUrl: './cmp-bloques.page.html',\n  styleUrls: ['./cmp-bloques.page.scss'],\n})\nexport class CmpBloquesPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent) content: IonContent;\n\n  cmpBloquesInit: Compte_bloquer[];\n  cmpBloques: Compte_bloquer[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n  readonly appStateEnum = AppStateEnum;\n  constructor(\n    public store: Store<AppState>,\n    private cmpBloquesActionsService: CmpBloquesActions,\n    private cmpBloquesSelectorsService: CmpBloquesSelectors,\n    private cmpBloquesService: CmpBloquesService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.cmpBloquesActionsService.getAllEntities()());\n    this.subCompteBloquers();\n    this.dataState$ = this.store.select(\n      this.cmpBloquesSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.cmpBloquesSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.cmpBloquesSelectorsService.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA COMPTE\n  subCompteBloquers() {\n    this.sub.add(\n      this.store\n        .select(this.cmpBloquesSelectorsService.getEntities())\n        .subscribe({\n          next: (cmpBloquesDate) => {\n            if (cmpBloquesDate) {\n              this.cmpBloquesInit = cmpBloquesDate;\n              this.cmpBloques = cmpBloquesDate;\n            }\n          },\n        })\n    );\n  }\n  //TODO SEARCH\n  handleChange(event: any) {\n    const querySearch = event.target.value.toLowerCase();\n    this.cmpBloques = this.cmpBloquesInit.filter(\n      (cmpBloque) => cmpBloque.email.toLowerCase().indexOf(querySearch) > -1\n    );\n  }\n  //TODO SCROLL\n  scrollToTop() {\n    this.content.scrollToTop(500);\n  }\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idEmploye?: string\n  ) {\n    this.cmpBloquesService.onNav(whereNav, routeParam, idEmploye);\n  }\n  //TODO DELETE COMPTE\n  onDeleteCmtBloquer(idCmtBloquer: string) {\n    this.store.dispatch(\n      this.cmpBloquesActionsService.deleteEntitie()({\n        idEntitie: idCmtBloquer,\n      })\n    );\n  }\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Compte_bloquer } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from '../../servicesModules/modules.ngrx.effects';\nimport { CmpBloquesDataService } from '../services/cmpBloques.data.service';\nimport { CmpBloquesService } from '../services/cmpBloques.service';\nimport { CmpBloquesActions } from './cmpBloques.actions';\n\n@Injectable()\nexport class CmpBloquesEffects extends EntitiesEffects<Compte_bloquer> {\n  constructor(\n    store: Store,\n    action$: Actions,\n    cmpBloquesActions: CmpBloquesActions,\n    cmpBloquesDataService: CmpBloquesDataService,\n    cmpBloquesService: CmpBloquesService\n  ) {\n    super(\n      store,\n      action$,\n      cmpBloquesActions,\n      cmpBloquesDataService,\n      cmpBloquesService,\n    );\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Compte_bloquer } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from '../../servicesModules/modules.ngrx.reducer';\nimport { CmpBloquesActions } from './cmpBloques.actions';\nimport { ICmpBloquesState } from './cmpBloques.state';\n\nclass CmpBloquesReducer extends EntitiesReducer<\n  Compte_bloquer,\n  ICmpBloquesState\n> {\n  constructor(cmpBloquesActions: CmpBloquesActions) {\n    super(cmpBloquesActions, 'compte');\n  }\n}\n\n//TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\nexport class GetCmpBloquesReducer {\n  private static intanceCmpBloquesReducer: CmpBloquesReducer = null;\n  public static getReducer(state: ICmpBloquesState, action: Action) {\n    if (GetCmpBloquesReducer.intanceCmpBloquesReducer == null) {\n      GetCmpBloquesReducer.intanceCmpBloquesReducer = new CmpBloquesReducer(\n        new CmpBloquesActions()\n      );\n    }\n    return GetCmpBloquesReducer.intanceCmpBloquesReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { Compte_bloquer } from 'src/app/models/models.interfaces';\nimport { EntitiesDataService } from '../../servicesModules/modules.data.service';\n\n@Injectable()\nexport class CmpBloquesDataService extends EntitiesDataService<Compte_bloquer> {\n  constructor(httpClient: HttpClient) {\n    super(httpClient, NameUrlEntitiesAPI.compteBloquers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/appState/app.state';\nimport { Compte_bloquer } from 'src/app/models/models.interfaces';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesResolver } from '../../servicesModules/modules.entitiesResolver';\nimport { CmpBloquesActions } from '../ngrx/cmpBloques.actions';\nimport { CmpBloquesSelectors } from '../ngrx/cmpBloques.selectors';\nimport { ICmpBloquesState } from '../ngrx/cmpBloques.state';\n\n@Injectable()\nexport class CmpBloquesResolver extends EntitiesResolver<\n  Compte_bloquer,\n  ICmpBloquesState\n> {\n  constructor(\n    store: Store<AppState>,\n    cmpbloquesActions: CmpBloquesActions,\n    cmpbloquesSelectors: CmpBloquesSelectors,\n    entitiesDataState: EntitiesDataState\n  ) {\n    super(store, cmpbloquesActions, cmpbloquesSelectors, entitiesDataState);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from '../../servicesModules/modules.service';\n\n@Injectable()\nexport class CmpBloquesService extends EntitiesService {\n  constructor(router: Router, entitiesDataState: EntitiesDataState) {\n    super(router, RoutesNames.cmpBloques, entitiesDataState);\n    this.setRouteParam(RoutesNames.cmpBloquesInfo);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}