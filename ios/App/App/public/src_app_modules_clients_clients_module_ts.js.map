{"version":3,"file":"src_app_modules_clients_clients_module_ts.js","mappings":"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","sources":["./src/app/modules/clients/add-and-upd-client/add-and-upd-client.component.ts","./src/app/modules/clients/client-linges/client-linges.component.ts","./src/app/modules/clients/clients-info/clients-info.component.ts","./src/app/modules/clients/clients-routing.module.ts","./src/app/modules/clients/clients.module.ts","./src/app/modules/clients/clients.page.ts","./src/app/modules/clients/ngrx/clients.effects.ts","./src/app/modules/clients/ngrx/clients.reducer.ts","./src/app/modules/clients/services/clients-data.service.ts","./src/app/modules/clients/services/clients.resolver.ts","./src/app/modules/clients/services/clients.service.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { UserService } from 'src/app/servicesApp/user.service';\nimport {\n  EntitiesDataState,\n  EnumAddOrUpdFormEntitie,\n} from '../../servicesModules/modules.entitiesDataState';\nimport { ClientsActions } from '../ngrx/clients.actions';\nimport { ClientsSelectors } from '../ngrx/clients.selectors';\n\n@Component({\n  selector: 'app-add-and-upd-client',\n  templateUrl: './add-and-upd-client.component.html',\n  styleUrls: ['./add-and-upd-client.component.scss'],\n})\nexport class AddAndUpdClientComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  nomClient = '...';\n  prenomClient = '';\n  clientUpd: Client = {\n    nom: '',\n    prenom: '',\n    adresse: '',\n    numero: '',\n    EmployeId: '',\n    nbrLinge: 1,\n    codeFidelite: 1,\n  };\n  //\n  formClient: FormGroup;\n  constructor(\n    private clientsActionsService: ClientsActions,\n    private store: Store<AppState>,\n    private formBuilder: FormBuilder,\n    private clientDataState: EntitiesDataState,\n    private clientsSelectorsService: ClientsSelectors,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.clientsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.clientsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.clientsSelectorsService.getMessageError()\n    );\n    this.initForm();\n    //\n    this.switchNameRoute(this.clientDataState.getAddOrUpdFormEntitie());\n  }\n  //TODO INIT FORM\n  initForm() {\n    this.formClient = this.formBuilder.group({\n      nom: [null, [Validators.required, Validators.pattern('^[a-zA-Z]*$')]],\n      prenom: [null, [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\n      adresse: [\n        null,\n        [Validators.required, Validators.pattern('^[a-zA-Z0-9 ]*$')],\n      ],\n      numero: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n    });\n  }\n\n  //TODO\n  switchNameRoute(nameRouter: EnumAddOrUpdFormEntitie) {\n    switch (nameRouter) {\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        this.store\n          .select(this.clientsSelectorsService.getEntitieById())\n          .subscribe({\n            next: (dataClient) => {\n              if (dataClient) {\n                this.clientUpd = dataClient;\n                this.formClient.patchValue({\n                  nom: dataClient.nom,\n                  prenom: dataClient.prenom,\n                  adresse: dataClient.adresse,\n                  numero: dataClient.numero,\n                });\n                this.nomClient = dataClient.nom;\n                this.prenomClient = dataClient.prenom;\n              }\n            },\n            error: (error) => {\n              this.store.dispatch(\n                this.clientsActionsService.errorEntities()({ error })\n              );\n            },\n          });\n        break;\n    }\n  }\n\n  //TODO SUBMIT\n  submitForm() {\n    switch (this.clientDataState.getAddOrUpdFormEntitie()) {\n      //ADD\n      case EnumAddOrUpdFormEntitie.addEntitie:\n        const formAddValues = this.formClient.value;\n        const newClient: Client = {\n          nom: formAddValues.nom,\n          prenom: formAddValues.prenom,\n          adresse: formAddValues.adresse,\n          numero: formAddValues.numero,\n          nbrLinge: 1,\n          codeFidelite: 1,\n          EmployeId: this.userService.getIdUser(),\n        };\n        this.store.dispatch(\n          this.clientsActionsService.addEntitie()({\n            entitie: newClient,\n            onNavAfterAdd: true,\n          })\n        );\n        break;\n      //UPD\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        const formUpdValues = this.formClient.value;\n        const updClient: Client = {\n          id: this.clientUpd.id,\n          nom: formUpdValues.nom,\n          prenom: formUpdValues.prenom,\n          adresse: formUpdValues.adresse,\n          numero: formUpdValues.numero,\n          nbrLinge: this.clientUpd.nbrLinge,\n          codeFidelite: this.clientUpd.codeFidelite,\n          createdAt: this.clientUpd.createdAt,\n          updatedAt: this.clientUpd.updatedAt,\n          Employe: this.clientUpd.Employe,\n          EmployeId: this.clientUpd.EmployeId,\n          Linges: this.clientUpd.Linges,\n        };\n        this.store.dispatch(\n          this.clientsActionsService.updEntitie()({\n            entitie: updClient,\n          })\n        );\n        break;\n      //DEF\n      default:\n        this.store.dispatch(\n          this.clientsActionsService.errorEntities()({\n            error: 'Erreur critique! Veillez nous le signaler',\n          })\n        );\n        break;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { ClientsSelectors } from '../ngrx/clients.selectors';\n\n@Component({\n  selector: 'app-client-linges',\n  templateUrl: './client-linges.component.html',\n  styleUrls: ['./client-linges.component.scss'],\n})\nexport class ClientLingesComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  client$: Observable<Client> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly appStateEnum = AppStateEnum;\n  constructor(\n    private store: Store<AppState>,\n    private clientsSelectorsService: ClientsSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.clientsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.clientsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.clientsSelectorsService.getMessageError()\n    );\n    this.client$ = this.store.select(\n      this.clientsSelectorsService.getEntitieById()\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { ClientsSelectors } from '../ngrx/clients.selectors';\nimport { ClientService } from '../services/clients.service';\n\n@Component({\n  selector: 'app-clients-info',\n  templateUrl: './clients-info.component.html',\n  styleUrls: ['./clients-info.component.scss'],\n})\nexport class ClientsInfoComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  client$: Observable<Client> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n  constructor(\n    private store: Store<AppState>,\n    private clientService: ClientService,\n    private clientsSelectorsService: ClientsSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.clientsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.clientsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.clientsSelectorsService.getMessageError()\n    );\n    this.client$ = this.store.select(\n      this.clientsSelectorsService.getEntitieById()\n    );\n  }\n\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idEmploye?: string\n  ) {\n    this.clientService.onNav(whereNav, routeParam, idEmploye);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EmployerAuthorization } from 'src/app/servicesApp/employer.authorization';\nimport { AddAndUpdClientComponent } from './add-and-upd-client/add-and-upd-client.component';\nimport { ClientLingesComponent } from './client-linges/client-linges.component';\nimport { ClientsInfoComponent } from './clients-info/clients-info.component';\nimport { ClientsPage } from './clients.page';\nimport { ClientsResolver } from './services/clients.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientsPage,\n  },\n  {\n    path: `${RoutesNames.clientsInfo}/:id`,\n    resolve: { clientsResolver: ClientsResolver },\n    component: ClientsInfoComponent,\n  },\n  {\n    path: `${RoutesNames.clientsAdd}`,\n    canActivate: [EmployerAuthorization],\n    component: AddAndUpdClientComponent,\n  },\n  {\n    path: `${RoutesNames.clientsUpd}/:id`,\n    canActivate: [EmployerAuthorization],\n    resolve: { clientsResolver: ClientsResolver },\n\n    component: AddAndUpdClientComponent,\n  },\n  {\n    path: `${RoutesNames.clientsLinges}/:id`,\n    resolve: { clientsResolver: ClientsResolver },\n    component: ClientLingesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientsPageRoutingModule } from './clients-routing.module';\nimport { ClientsPage } from './clients.page';\nimport { ClientsDataService } from './services/clients-data.service';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ClientsEffects } from './ngrx/clients.effects';\nimport { ClientsInfoComponent } from './clients-info/clients-info.component';\nimport { AddAndUpdClientComponent } from './add-and-upd-client/add-and-upd-client.component';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\nimport { ClientLingesComponent } from './client-linges/client-linges.component';\nimport { ClientService } from './services/clients.service';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { GetClientsReducer } from './ngrx/clients.reducer';\nimport { ClientsResolver } from './services/clients.resolver';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClientsPageRoutingModule,\n    StoreModule.forFeature(\n      NameStateEntities.client,\n      GetClientsReducer.getReducer\n    ),\n    EffectsModule.forFeature([ClientsEffects]),\n    ShearedModulesModule,\n  ],\n  declarations: [\n    ClientsPage,\n    ClientsInfoComponent,\n    AddAndUpdClientComponent,\n    ClientLingesComponent,\n  ],\n  providers: [ClientsDataService, ClientService, ClientsResolver],\n})\nexport class ClientsPageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Client, EnumUserRole } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { UserService } from 'src/app/servicesApp/user.service';\nimport { WhereNavEntities } from '../servicesModules/modules.service';\nimport { ClientsActions } from './ngrx/clients.actions';\nimport { ClientsSelectors } from './ngrx/clients.selectors';\nimport { ClientService } from './services/clients.service';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.page.html',\n  styleUrls: ['./clients.page.scss'],\n})\nexport class ClientsPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent) content: IonContent;\n  isAdmin = false;\n  clientsInit: Client[];\n  clients: Client[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly routesNames = RoutesNames;\n  readonly whereNavClient = WhereNavEntities;\n  readonly appStateEnum = AppStateEnum;\n  constructor(\n    public store: Store<AppState>,\n    private clientsActionsService: ClientsActions,\n    private clientsSelectorsService: ClientsSelectors,\n    private clientService: ClientService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.clientsActionsService.getAllEntities()());\n    this.subClients();\n    this.dataState$ = this.store.select(\n      this.clientsSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.clientsSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.clientsSelectorsService.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA CLIENTS\n  subClients() {\n    this.sub.add(\n      this.store.select(this.clientsSelectorsService.getEntities()).subscribe({\n        next: (clients) => {\n          if (clients) {\n            this.clientsInit = clients;\n            this.clients = clients;\n          }\n        },\n      })\n    );\n  }\n  //TODO\n  onIsAdmin() {\n    this.isAdmin =\n      this.userService.getRoleUser() === EnumUserRole.admin ? true : false;\n  }\n  //TODO SEARCH\n  handleChange(event: any) {\n    const querySearch = event.target.value.toLowerCase();\n    this.clients = this.clientsInit.filter(\n      (client) => client.prenom.toLowerCase().indexOf(querySearch) > -1\n    );\n  }\n  //TODO SCROLL\n  scrollToTop() {\n    this.content.scrollToTop(500);\n  }\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idClient?: string\n  ) {\n    this.clientService.onNav(whereNav, routeParam, idClient);\n  }\n  //TODO DELETE CLIENT\n  onDeleteClient(idClient: string) {\n    this.store.dispatch(\n      this.clientsActionsService.deleteEntitie()({ idEntitie: idClient })\n    );\n  }\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from '../../servicesModules/modules.ngrx.effects';\nimport { ClientsDataService } from '../services/clients-data.service';\nimport { ClientService } from '../services/clients.service';\nimport { ClientsActions } from './clients.actions';\n\n@Injectable()\nexport class ClientsEffects extends EntitiesEffects<Client> {\n  constructor(\n    store: Store,\n    action$: Actions,\n    entitiesActionsService: ClientsActions,\n    entitiesDataService: ClientsDataService,\n    entitieservice: ClientService\n  ) {\n    super(\n      store,\n      action$,\n      entitiesActionsService,\n      entitiesDataService,\n      entitieservice\n    );\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { Action } from '@ngrx/store';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from '../../servicesModules/modules.ngrx.reducer';\nimport { ClientsActions } from './clients.actions';\nimport { IClientsState } from './clients.state';\n\nclass ClientsReducer extends EntitiesReducer<Client, IClientsState> {\n  constructor(clientsActions: ClientsActions) {\n    super(clientsActions, 'client');\n  }\n}\n\nexport class GetClientsReducer {\n  private static intanceClientReducer: ClientsReducer = null;\n  //TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\n  public static getReducer(state: IClientsState, action: Action) {\n    if (GetClientsReducer.intanceClientReducer == null) {\n      GetClientsReducer.intanceClientReducer = new ClientsReducer(\n        new ClientsActions()\n      );\n    }\n    return GetClientsReducer.intanceClientReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { EntitiesDataService } from '../../servicesModules/modules.data.service';\n\n@Injectable()\nexport class ClientsDataService extends EntitiesDataService<Client> {\n  constructor(httpClient: HttpClient) {\n    super(httpClient, NameUrlEntitiesAPI.clients);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/appState/app.state';\nimport { Client } from 'src/app/models/models.interfaces';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesResolver } from '../../servicesModules/modules.entitiesResolver';\nimport { ClientsActions } from '../ngrx/clients.actions';\nimport { ClientsSelectors } from '../ngrx/clients.selectors';\nimport { IClientsState } from '../ngrx/clients.state';\n\n@Injectable()\nexport class ClientsResolver extends EntitiesResolver<Client, IClientsState> {\n  constructor(\n    store: Store<AppState>,\n    clientsActions: ClientsActions,\n    clientsSelectors: ClientsSelectors,\n    entitiesDataState: EntitiesDataState\n  ) {\n    super(store, clientsActions, clientsSelectors, entitiesDataState);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from '../../servicesModules/modules.service';\n\n@Injectable()\nexport class ClientService extends EntitiesService {\n  constructor(router: Router, entitieDataState: EntitiesDataState) {\n    //RoutesNames.clients definition de la route de base\n    super(router, RoutesNames.clients, entitieDataState);\n    //setRoute definition de la route pour la redirection\n    this.setRouteParam(RoutesNames.clientsInfo);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}