{"version":3,"file":"src_app_modules_modulesParametres_info-pieces_info-pieces_module_ts.js","mappings":"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","sources":["./src/app/modules/modulesParametres/info-pieces/info-pieces-add/info-pieces-add.component.ts","./src/app/modules/modulesParametres/info-pieces/info-pieces-routing.module.ts","./src/app/modules/modulesParametres/info-pieces/info-pieces.module.ts","./src/app/modules/modulesParametres/info-pieces/info-pieces.page.ts","./src/app/modules/modulesParametres/info-pieces/infos-pieces-info/infos-pieces-info.component.ts","./src/app/modules/modulesParametres/info-pieces/ngrx/InfoPieces.reducer.ts","./src/app/modules/modulesParametres/info-pieces/ngrx/infosPieces.effects.ts","./src/app/modules/modulesParametres/info-pieces/services/infoPieces.resolver.ts","./src/app/modules/modulesParametres/info-pieces/services/infosPieces.data.service.ts","./src/app/modules/modulesParametres/info-pieces/services/infosPieces.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { InfosPiecesActions } from '../ngrx/infosPieces.actions';\nimport { InfosPiecesSelectors } from '../ngrx/infosPieces.selectors';\n\n@Component({\n  selector: 'app-info-pieces-add',\n  templateUrl: './info-pieces-add.component.html',\n  styleUrls: ['./info-pieces-add.component.scss'],\n})\nexport class InfoPiecesAddComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n\n  //\n  formInfoPiece: FormGroup;\n  constructor(\n    private store: Store<AppState>,\n    private infoPiecesActions: InfosPiecesActions,\n    private infoPiecesSelectors: InfosPiecesSelectors,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.infoPiecesSelectors.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.infoPiecesSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.infoPiecesSelectors.getMessageError()\n    );\n    this.initForm();\n    //\n  }\n  //TODO INIT FORM\n  initForm() {\n    this.formInfoPiece = this.formBuilder.group({\n      nom: [\n        null,\n        [Validators.required, Validators.pattern('^[a-zA-Zéàôêûîèç_ ]*$')],\n      ],\n      prixLinge: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n      prixRepassage: [\n        null,\n        [Validators.required, Validators.pattern('^[0-9]*$')],\n      ],\n    });\n  }\n\n  //TODO SUBMIT\n  submitForm() {\n    //ADD\n    const formAddValues = this.formInfoPiece.value;\n    const newInfoPiece: InfoPiece = {\n      nom: formAddValues.nom,\n      prixLinge: formAddValues.prixLinge,\n      prixRepassage: formAddValues.prixRepassage,\n    };\n    this.store.dispatch(\n      this.infoPiecesActions.addEntitie()({\n        entitie: newInfoPiece,\n        onNavAfterAdd: true,\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { InfoPiecesAddComponent } from './info-pieces-add/info-pieces-add.component';\n\nimport { InfoPiecesPage } from './info-pieces.page';\nimport { InfosPiecesInfoComponent } from './infos-pieces-info/infos-pieces-info.component';\nimport { InfosPiecesResolver } from './services/infoPieces.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfoPiecesPage,\n  },\n  {\n    path: `${RoutesNames.infosPiecesAdd}`,\n    component: InfoPiecesAddComponent,\n  },\n  {\n    path: `${RoutesNames.infosPiecesInfoAndUpd}/:id`,\n    resolve: { infosPiecesResolver: InfosPiecesResolver },\n    component: InfosPiecesInfoComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfoPiecesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { InfoPiecesPageRoutingModule } from './info-pieces-routing.module';\nimport { InfoPiecesPage } from './info-pieces.page';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { InfosPiecesService } from './services/infosPieces.service';\nimport { InfosPiecesDataService } from './services/infosPieces.data.service';\nimport { InfosPiecesEffects } from './ngrx/infosPieces.effects';\nimport { GetInfosPiecesReducer } from './ngrx/InfoPieces.reducer';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\nimport { InfosPiecesInfoComponent } from './infos-pieces-info/infos-pieces-info.component';\nimport { InfoPiecesAddComponent } from './info-pieces-add/info-pieces-add.component';\nimport { InfosPiecesResolver } from './services/infoPieces.resolver';\n\n@NgModule({\n  imports: [\n    ShearedModulesModule,\n    InfoPiecesPageRoutingModule,\n    StoreModule.forFeature(\n      NameStateEntities.infosPiece,\n      GetInfosPiecesReducer.getReducer\n    ),\n    EffectsModule.forFeature([InfosPiecesEffects]),\n  ],\n  declarations: [\n    InfoPiecesPage,\n    InfosPiecesInfoComponent,\n    InfoPiecesAddComponent,\n  ],\n  providers: [InfosPiecesDataService, InfosPiecesService, InfosPiecesResolver],\n})\nexport class InfoPiecesPageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { InfosPiecesActions } from './ngrx/infosPieces.actions';\nimport { InfosPiecesSelectors } from './ngrx/infosPieces.selectors';\nimport { InfosPiecesService } from './services/infosPieces.service';\n\n@Component({\n  selector: 'app-info-pieces',\n  templateUrl: './info-pieces.page.html',\n  styleUrls: ['./info-pieces.page.scss'],\n})\nexport class InfoPiecesPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent) content: IonContent;\n\n  readonly routesNames = RoutesNames;\n  infoPiecesInit: InfoPiece[];\n  infoPieces: InfoPiece[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly dataStateEnum = AppStateEnum;\n  readonly whereNav = WhereNavEntities;\n  listsLoading: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  constructor(\n    private store: Store<AppState>,\n    private infoPiecesActions: InfosPiecesActions,\n    private infoPiecesSelectors: InfosPiecesSelectors,\n    private infoPiecesService: InfosPiecesService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.infoPiecesActions.getAllEntities()());\n    this.subInfoPieces();\n    this.dataState$ = this.store.select(\n      this.infoPiecesSelectors.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.infoPiecesSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.infoPiecesSelectors.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA INFO PIECE\n  subInfoPieces() {\n    this.sub.add(\n      this.store.select(this.infoPiecesSelectors.getEntities()).subscribe({\n        next: (dataInfoPieces) => {\n          if (dataInfoPieces) {\n            this.infoPiecesInit = dataInfoPieces;\n            this.infoPieces = dataInfoPieces;\n          }\n        },\n      })\n    );\n  }\n\n  //TODO NAV\n  onNav(\n    wherNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idInfoPiece?: string\n  ) {\n    this.infoPiecesService.onNav(wherNav, routeParam, idInfoPiece);\n  }\n  //TODO SEARCH\n  handleChange(event: any) {\n    const querySearch = event.target.value.toLowerCase();\n    this.infoPieces = this.infoPiecesInit.filter(\n      (infoPiece) => infoPiece.nom.toLowerCase().indexOf(querySearch) > -1\n    );\n  }\n  //TODO SCROLL\n  scrollToTop() {\n    this.content.scrollToTop(500);\n  }\n\n  //TODO DELETE\n  onDeleteInfosPiece(idInfosPiece: string) {\n    this.store.dispatch(\n      this.infoPiecesActions.deleteEntitie()({ idEntitie: idInfosPiece })\n    );\n  }\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { InfosPiecesActions } from '../ngrx/infosPieces.actions';\nimport { InfosPiecesSelectors } from '../ngrx/infosPieces.selectors';\n\n@Component({\n  selector: 'app-infos-pieces-info',\n  templateUrl: './infos-pieces-info.component.html',\n  styleUrls: ['./infos-pieces-info.component.scss'],\n})\nexport class InfosPiecesInfoComponent implements OnInit, OnDestroy {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  infoPiece$: Observable<InfoPiece> = new Observable();\n  infoPiece: InfoPiece;\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  updated: boolean;\n  prixLingeUpd: number;\n  prixRepassageUpd: number;\n  readonly routesNames = RoutesNames;\n  constructor(\n    private store: Store<AppState>,\n    private infoPiecesActions: InfosPiecesActions,\n    private infoPiecesSelectors: InfosPiecesSelectors,\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.infoPiecesActions.getAllEntities()());\n\n    this.dataState$ = this.store.select(\n      this.infoPiecesSelectors.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.infoPiecesSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.infoPiecesSelectors.getMessageError()\n    );\n    this.infoPiece$ = this.store.select(\n      this.infoPiecesSelectors.getEntitieById()\n    );\n    this.subInfosPiece();\n  }\n\n  //TODO SUBS AUX DATA INFO PIECE\n  subInfosPiece() {\n    this.sub.add(\n      this.store.select(this.infoPiecesSelectors.getEntitieById()).subscribe({\n        next: (dataInfosPiece) => {\n          if (dataInfosPiece) {\n            this.infoPiece = dataInfosPiece;\n            this.prixLingeUpd = dataInfosPiece.prixLinge;\n            this.prixRepassageUpd = dataInfosPiece.prixRepassage;\n          }\n        },\n      })\n    );\n  }\n  //TODO ON UPD\n  onUpd() {\n    this.updated = !this.updated;\n  }\n  //TODO ON SAVE\n  onSave() {\n    const prixL = this.infoPiece.prixLinge;\n    const prixR = this.infoPiece.prixRepassage;\n    if (this.prixLingeUpd < 100 || this.prixLingeUpd > 5000) {\n      this.store.dispatch(\n        this.infoPiecesActions.errorEntities()({\n          error: 'Veillez verifier le prix du linge',\n        })\n      );\n      return false;\n    }\n    if (this.prixRepassageUpd < 100 || this.prixLingeUpd > 5000) {\n      this.store.dispatch(\n        this.infoPiecesActions.errorEntities()({\n          error: 'Veillez verifier le prix du repassage',\n        })\n      );\n      return false;\n    }\n    const infoPieceUpd: InfoPiece = {\n      ...this.infoPiece,\n      prixLinge: this.prixLingeUpd !== prixL ? this.prixLingeUpd : prixL,\n      prixRepassage:\n        this.prixRepassageUpd !== prixR ? this.prixRepassageUpd : prixR,\n    };\n\n    this.store.dispatch(\n      this.infoPiecesActions.updEntitie()({ entitie: infoPieceUpd })\n    );\n  }\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from 'src/app/modules/servicesModules/modules.ngrx.reducer';\nimport { InfosPiecesActions } from './infosPieces.actions';\nimport { IInfosPiecesState } from './infosPieces.state';\n\nclass InfosPiecesReducer extends EntitiesReducer<InfoPiece, IInfosPiecesState> {\n  constructor(infosPiecesActions: InfosPiecesActions) {\n    super(infosPiecesActions, 'infos piece');\n  }\n}\n\n//TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\nexport class GetInfosPiecesReducer {\n  private static intanceInfosPiecesReducer: InfosPiecesReducer = null;\n  public static getReducer(state: IInfosPiecesState, action: Action) {\n    if (GetInfosPiecesReducer.intanceInfosPiecesReducer == null) {\n      GetInfosPiecesReducer.intanceInfosPiecesReducer = new InfosPiecesReducer(\n        new InfosPiecesActions()\n      );\n    }\n    return GetInfosPiecesReducer.intanceInfosPiecesReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from 'src/app/modules/servicesModules/modules.ngrx.effects';\nimport { InfosPiecesDataService } from '../services/infosPieces.data.service';\nimport { InfosPiecesService } from '../services/infosPieces.service';\nimport { InfosPiecesActions } from './infosPieces.actions';\n\n@Injectable()\nexport class InfosPiecesEffects extends EntitiesEffects<InfoPiece> {\n  constructor(\n    store: Store,\n    action$: Actions,\n    infosPiecesActions: InfosPiecesActions,\n    infosPiecesDataService: InfosPiecesDataService,\n    infosPiecesService: InfosPiecesService\n  ) {\n    super(\n      store,\n      action$,\n      infosPiecesActions,\n      infosPiecesDataService,\n      infosPiecesService\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/appState/app.state';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { EntitiesDataState } from 'src/app/modules/servicesModules/modules.entitiesDataState';\nimport { EntitiesResolver } from 'src/app/modules/servicesModules/modules.entitiesResolver';\nimport { InfosPiecesActions } from '../ngrx/infosPieces.actions';\nimport { InfosPiecesSelectors } from '../ngrx/infosPieces.selectors';\nimport { IInfosPiecesState } from '../ngrx/infosPieces.state';\n\n@Injectable()\nexport class InfosPiecesResolver extends EntitiesResolver<\n  InfoPiece,\n  IInfosPiecesState\n> {\n  constructor(\n    store: Store<AppState>,\n    infospieceActions: InfosPiecesActions,\n    infospieceSelectors: InfosPiecesSelectors,\n    entitiesDataState: EntitiesDataState\n  ) {\n    super(store, infospieceActions, infospieceSelectors, entitiesDataState);\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { InfoPiece } from 'src/app/models/models.interfaces';\nimport { EntitiesDataService } from 'src/app/modules/servicesModules/modules.data.service';\n\n@Injectable()\nexport class InfosPiecesDataService extends EntitiesDataService<InfoPiece> {\n  constructor(httpClient: HttpClient) {\n    super(httpClient, NameUrlEntitiesAPI.infosPieces);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntitiesDataState } from 'src/app/modules/servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from 'src/app/modules/servicesModules/modules.service';\nimport { RoutesNames } from 'src/app/routes.config';\n\n@Injectable()\nexport class InfosPiecesService extends EntitiesService {\n  constructor(router: Router, entitiesDataState: EntitiesDataState) {\n    super(router, RoutesNames.infosPieces, entitiesDataState);\n    this.setRouteParam(RoutesNames.infosPiecesInfoAndUpd);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}