{"version":3,"file":"src_app_modules_factures_factures_module_ts.js","mappings":"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","sources":["./src/app/modules/factures/factures-add-and-upd/factures-add-and-upd.component.ts","./src/app/modules/factures/factures-info/factures-info.component.ts","./src/app/modules/factures/factures-routing.module.ts","./src/app/modules/factures/factures.module.ts","./src/app/modules/factures/factures.page.ts","./src/app/modules/factures/ngrx/factures.effects.ts","./src/app/modules/factures/ngrx/factures.reducer.ts","./src/app/modules/factures/services/factures.data.service.ts","./src/app/modules/factures/services/factures.resolver.ts","./src/app/modules/factures/services/factures.service.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport {\n  Facture,\n  EnumTypeFacture,\n  EtatFinancier,\n  Employe,\n} from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { UserService } from 'src/app/servicesApp/user.service';\nimport { AcceuilActions } from '../../acceuil/ngrx/acceuil.actions';\nimport { AcceuilSelectors } from '../../acceuil/ngrx/acceuil.selectors';\nimport { EmployersActions } from '../../employer/ngrx/employer.action';\nimport { EmployersSelectors } from '../../employer/ngrx/employers.selectors';\nimport {\n  EntitiesDataState,\n  EnumAddOrUpdFormEntitie,\n} from '../../servicesModules/modules.entitiesDataState';\nimport { FacturesActions } from '../ngrx/factures.actions';\nimport { FacturesSelectors } from '../ngrx/factures.selectors';\n\n@Component({\n  selector: 'app-factures-add-and-upd',\n  templateUrl: './factures-add-and-upd.component.html',\n  styleUrls: ['./factures-add-and-upd.component.scss'],\n})\nexport class FacturesAddAndUpdComponent implements OnInit, OnDestroy {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly routesNames = RoutesNames;\n  readonly enumTypeFacture = EnumTypeFacture;\n  employes: Employe[];\n  salaire = 0;\n  idEtatFinancier = '';\n  caisse = 0;\n  depense = 0;\n  factureUpd: Facture = {\n    type: EnumTypeFacture.eau,\n    AdminId: '',\n    montant: 0,\n  };\n  //\n  formFacture: FormGroup;\n  constructor(\n    private store: Store<AppState>,\n    private facturesActions: FacturesActions,\n    private facturesSelectores: FacturesSelectors,\n    private entitiesDataState: EntitiesDataState,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private etatFinancierActions: AcceuilActions,\n    private etatFinancierSelectores: AcceuilSelectors,\n    private employersActions: EmployersActions,\n    private employerSelectors: EmployersSelectors\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.employersActions.getAllEntities()());\n    this.store.dispatch(this.etatFinancierActions.getAllEntities()());\n    this.subEmployes();\n    this.dataState$ = this.store.select(this.facturesSelectores.getDataState());\n    this.notification$ = this.store.select(\n      this.facturesSelectores.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.facturesSelectores.getMessageError()\n    );\n    this.initForm();\n    //\n    this.switchNameRoute(this.entitiesDataState.getAddOrUpdFormEntitie());\n    this.onSubEtatFinancier();\n  }\n  //TODO INIT FORM\n  initForm() {\n    this.formFacture = this.formBuilder.group({\n      type: [null, [Validators.required, Validators.pattern('^[a-zA-Zé]*$')]],\n      montant: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n    });\n  }\n\n  //TODO SUBS AUX DATA EMPLOYER\n  subEmployes() {\n    this.sub.add(\n      this.store.select(this.employerSelectors.getEntities()).subscribe({\n        next: (employes) => {\n          if (employes) {\n            this.employes = employes;\n          }\n        },\n      })\n    );\n  }\n  //TODO FILTER\n  onSelectType($whereContainerEvent: any) {\n    switch ($whereContainerEvent.target.value) {\n      case EnumTypeFacture.salaire:\n        if (this.employes) {\n          this.employes.forEach((employer) => {\n            this.salaire += employer.salaire;\n          });\n          this.formFacture.patchValue({\n            montant: this.salaire,\n          });\n        }\n        break;\n    }\n  }\n  //TODO SUB ETAT\n  onSubEtatFinancier() {\n    this.store.select(this.etatFinancierSelectores.getEntities()).subscribe({\n      next: (data) => {\n        if (data) {\n          if (data.length > 0) {\n            this.caisse = data[0].caisse;\n            this.depense = data[0].depense;\n            this.idEtatFinancier = data[0].id;\n          }\n        }\n      },\n    });\n  }\n\n  //TODO\n  switchNameRoute(nameRouter: EnumAddOrUpdFormEntitie) {\n    switch (nameRouter) {\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        this.store.select(this.facturesSelectores.getEntitieById()).subscribe({\n          next: (dataFacture) => {\n            if (dataFacture) {\n              this.factureUpd = dataFacture;\n              this.formFacture.patchValue({\n                type: dataFacture.type,\n                montant: dataFacture.montant,\n              });\n            }\n          },\n          error: (error) => {\n            this.store.dispatch(\n              this.facturesActions.errorEntities()({ error })\n            );\n          },\n        });\n        break;\n    }\n  }\n\n  //TODO SUBMIT\n  submitForm() {\n    switch (this.entitiesDataState.getAddOrUpdFormEntitie()) {\n      //ADD\n      case EnumAddOrUpdFormEntitie.addEntitie:\n        const formAddValues = this.formFacture.value;\n        const newFacture: Facture = {\n          type: formAddValues.type,\n          montant: formAddValues.montant,\n          AdminId: this.userService.getIdUser(),\n        };\n        const etat: EtatFinancier = {\n          caisse: this.caisse - formAddValues.montant,\n          depense: this.depense + formAddValues.montant,\n          id: this.idEtatFinancier,\n        };\n        this.store.dispatch(\n          this.etatFinancierActions.updEntitie()({\n            entitie: etat,\n            onNavAfterUpd: false,\n          })\n        );\n        this.store.dispatch(\n          this.facturesActions.addEntitie()({\n            entitie: newFacture,\n            onNavAfterAdd: true,\n          })\n        );\n        break;\n      //UPD\n      case EnumAddOrUpdFormEntitie.updEntitie:\n        const formUpdValues = this.formFacture.value;\n        const updFacture: Facture = {\n          id: this.factureUpd.id,\n          type: formUpdValues.type,\n          montant: formUpdValues.montant,\n          AdminId: this.factureUpd.AdminId,\n          Admin: this.factureUpd.Admin,\n          createdAt: this.factureUpd.createdAt,\n          updatedAt: this.factureUpd.updatedAt,\n        };\n        this.store.dispatch(\n          this.facturesActions.updEntitie()({\n            entitie: updFacture,\n          })\n        );\n        break;\n      //DEF\n      default:\n        this.store.dispatch(\n          this.facturesActions.errorEntities()({\n            error: 'Erreur critique! Veillez nous le signaler',\n          })\n        );\n        break;\n    }\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Facture } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../../servicesModules/modules.service';\nimport { FacturesSelectors } from '../ngrx/factures.selectors';\nimport { FacturesService } from '../services/factures.service';\n\n@Component({\n  selector: 'app-factures-info',\n  templateUrl: './factures-info.component.html',\n  styleUrls: ['./factures-info.component.scss'],\n})\nexport class FacturesInfoComponent implements OnInit {\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  facture$: Observable<Facture> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  readonly routesNames = RoutesNames;\n  constructor(\n    private store: Store<AppState>,\n    private factureService: FacturesService,\n    private facturesSelectorsService: FacturesSelectors\n  ) {}\n\n  ngOnInit() {\n    this.dataState$ = this.store.select(\n      this.facturesSelectorsService.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.facturesSelectorsService.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.facturesSelectorsService.getMessageError()\n    );\n    this.facture$ = this.store.select(\n      this.facturesSelectorsService.getEntitieById()\n    );\n  }\n\n  //TODO NAVIGATION FACTURE\n  onNavUpdate(idFacture: string) {\n    this.factureService.onNav(\n      WhereNavEntities.updEntitie,\n      RoutesNames.facturesUpd,\n      idFacture\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { FacturesAddAndUpdComponent } from './factures-add-and-upd/factures-add-and-upd.component';\nimport { FacturesInfoComponent } from './factures-info/factures-info.component';\nimport { FacturesPage } from './factures.page';\nimport { FacturesResolver } from './services/factures.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FacturesPage,\n  },\n  {\n    path: `${RoutesNames.facturesInfo}/:id`,\n    resolve: { facturesResolver: FacturesResolver },\n    component: FacturesInfoComponent,\n  },\n  {\n    path: `${RoutesNames.facturesAdd}`,\n    component: FacturesAddAndUpdComponent,\n  },\n  {\n    path: `${RoutesNames.facturesUpd}/:id`,\n    resolve: { facturesResolver: FacturesResolver },\n    component: FacturesAddAndUpdComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FacturesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\nimport { FacturesAddAndUpdComponent } from './factures-add-and-upd/factures-add-and-upd.component';\nimport { FacturesInfoComponent } from './factures-info/factures-info.component';\nimport { FacturesPageRoutingModule } from './factures-routing.module';\nimport { FacturesPage } from './factures.page';\nimport { FacturesEffects } from './ngrx/factures.effects';\nimport { GetFacturesReducer } from './ngrx/factures.reducer';\nimport { FacturesDataService } from './services/factures.data.service';\nimport { FacturesResolver } from './services/factures.resolver';\nimport { FacturesService } from './services/factures.service';\n\n@NgModule({\n  imports: [\n    FacturesPageRoutingModule,\n    StoreModule.forFeature(\n      NameStateEntities.facture,\n      GetFacturesReducer.getReducer\n    ),\n    EffectsModule.forFeature([FacturesEffects]),\n    ShearedModulesModule,\n  ],\n  declarations: [\n    FacturesPage,\n    FacturesAddAndUpdComponent,\n    FacturesInfoComponent,\n  ],\n  providers: [FacturesDataService, FacturesService, FacturesResolver],\n})\nexport class FacturesPageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { Facture, EnumTypeFacture } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { WhereNavEntities } from '../servicesModules/modules.service';\nimport { FacturesActions } from './ngrx/factures.actions';\nimport { FacturesSelectors } from './ngrx/factures.selectors';\nimport { FacturesService } from './services/factures.service';\n\n@Component({\n  selector: 'app-factures',\n  templateUrl: './factures.page.html',\n  styleUrls: ['./factures.page.scss'],\n})\nexport class FacturesPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent) content: IonContent;\n\n  facturesInit: Facture[];\n  factures: Facture[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n  readonly routesNames = RoutesNames;\n  readonly whereNav = WhereNavEntities;\n  readonly enumTypeFacture = EnumTypeFacture;\n  readonly appStateEnum = AppStateEnum;\n  customActionSheetOptions = {\n    header: 'Factures',\n    subHeader: 'Sélectionné le type de facture',\n  };\n  constructor(\n    private store: Store<AppState>,\n    private facturesActions: FacturesActions,\n    private facturesSelectors: FacturesSelectors,\n    private facturesService: FacturesService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.facturesActions.getAllEntities()());\n    this.subFactures();\n    this.dataState$ = this.store.select(this.facturesSelectors.getDataState());\n    this.notification$ = this.store.select(\n      this.facturesSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.facturesSelectors.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA FACTURE\n  subFactures() {\n    this.sub.add(\n      this.store.select(this.facturesSelectors.getEntities()).subscribe({\n        next: (factures) => {\n          if (factures) {\n            this.facturesInit = factures;\n            this.factures = factures;\n          }\n        },\n      })\n    );\n  }\n  //TODO SCROLL\n  scrollToTop() {\n    this.content.scrollToTop(500);\n  }\n  //TODO NAV\n  onNav(\n    whereNav: WhereNavEntities,\n    routeParam?: RoutesNames,\n    idFacture?: string\n  ) {\n    this.facturesService.onNav(whereNav, routeParam, idFacture);\n  }\n  //TODO DELETE ADMIN\n  onDeleteFacture(idFacture: string) {\n    this.store.dispatch(\n      this.facturesActions.deleteEntitie()({ idEntitie: idFacture })\n    );\n  }\n\n  //TODO FILTER\n  onFilter($whereContainerEvent: any) {\n    switch ($whereContainerEvent.target.value) {\n      case EnumTypeFacture.eau:\n        this.filter(EnumTypeFacture.eau);\n        break;\n      case EnumTypeFacture.location:\n        this.filter(EnumTypeFacture.location);\n        break;\n      case EnumTypeFacture.electricite:\n        this.filter(EnumTypeFacture.electricite);\n        break;\n      case EnumTypeFacture.salaire:\n        this.filter(EnumTypeFacture.salaire);\n        break;\n      default:\n        this.allFactures();\n        break;\n    }\n  }\n  filter(filter: EnumTypeFacture) {\n    this.factures = this.facturesInit.filter(\n      (facture) => facture.type === filter\n    );\n  }\n  allFactures() {\n    this.factures = this.facturesInit;\n  }\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Facture } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from '../../servicesModules/modules.ngrx.effects';\nimport { FacturesDataService } from '../services/factures.data.service';\nimport { FacturesService } from '../services/factures.service';\nimport { FacturesActions } from './factures.actions';\n\n@Injectable()\nexport class FacturesEffects extends EntitiesEffects<Facture> {\n  constructor(\n    store: Store,\n    action$: Actions,\n    facturesActions: FacturesActions,\n    facturesDataService: FacturesDataService,\n    facturesService: FacturesService,\n  ) {\n    super(\n      store,\n      action$,\n      facturesActions,\n      facturesDataService,\n      facturesService,\n    );\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Facture } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from '../../servicesModules/modules.ngrx.reducer';\nimport { FacturesActions } from './factures.actions';\nimport { IFactureState } from './factures.state';\n\nclass FacturesReducer extends EntitiesReducer<Facture, IFactureState> {\n  constructor(facturesActions: FacturesActions) {\n    super(facturesActions, 'facture');\n  }\n}\n\n//TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\nexport class GetFacturesReducer {\n  private static intanceFactureReducer: FacturesReducer = null;\n  public static getReducer(state: IFactureState, action: Action) {\n    if (GetFacturesReducer.intanceFactureReducer == null) {\n      GetFacturesReducer.intanceFactureReducer = new FacturesReducer(\n        new FacturesActions()\n      );\n    }\n    return GetFacturesReducer.intanceFactureReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { Facture } from 'src/app/models/models.interfaces';\nimport { EntitiesDataService } from '../../servicesModules/modules.data.service';\n\n@Injectable()\nexport class FacturesDataService extends EntitiesDataService<Facture> {\n  constructor(httpClient: HttpClient) {\n    super(httpClient, NameUrlEntitiesAPI.factures);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/appState/app.state';\nimport { Facture } from 'src/app/models/models.interfaces';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesResolver } from '../../servicesModules/modules.entitiesResolver';\nimport { FacturesActions } from '../ngrx/factures.actions';\nimport { FacturesSelectors } from '../ngrx/factures.selectors';\nimport { IFactureState } from '../ngrx/factures.state';\n\n@Injectable()\nexport class FacturesResolver extends EntitiesResolver<Facture, IFactureState> {\n  constructor(\n    store: Store<AppState>,\n    facturesActions: FacturesActions,\n    facturesSelectors: FacturesSelectors,\n    entitiesDataState: EntitiesDataState\n  ) {\n    super(store, facturesActions, facturesSelectors, entitiesDataState);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { EntitiesDataState } from '../../servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from '../../servicesModules/modules.service';\n\n@Injectable()\nexport class FacturesService extends EntitiesService {\n  constructor(router: Router, entitiesDataState: EntitiesDataState) {\n    super(router, RoutesNames.factures, entitiesDataState);\n    this.setRouteParam(RoutesNames.facturesInfo);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}