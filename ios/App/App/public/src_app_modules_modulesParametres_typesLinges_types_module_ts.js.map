{"version":3,"file":"src_app_modules_modulesParametres_typesLinges_types_module_ts.js","mappings":"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","sources":["./src/app/modules/modulesParametres/typesLinges/ngrx/typesLinges.effects.ts","./src/app/modules/modulesParametres/typesLinges/ngrx/typesLinges.reducer.ts","./src/app/modules/modulesParametres/typesLinges/services/typesLinges.data.service.ts","./src/app/modules/modulesParametres/typesLinges/services/typesLinges.service.ts","./src/app/modules/modulesParametres/typesLinges/types-routing.module.ts","./src/app/modules/modulesParametres/typesLinges/types.module.ts","./src/app/modules/modulesParametres/typesLinges/types.page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { TypeLinge } from 'src/app/models/models.interfaces';\nimport { EntitiesEffects } from 'src/app/modules/servicesModules/modules.ngrx.effects';\nimport { TypesLingesDataService } from '../services/typesLinges.data.service';\nimport { TypesLingesService } from '../services/typesLinges.service';\nimport { TypesLingesActions } from './typesLinges.actions';\n\n@Injectable()\nexport class TypesLingesEffects extends EntitiesEffects<TypeLinge> {\n  constructor(\n    store: Store,\n    action$: Actions,\n    typesLingesActions: TypesLingesActions,\n    typesLingesDataService: TypesLingesDataService,\n    typesLingesService: TypesLingesService\n  ) {\n    super(\n      store,\n      action$,\n      typesLingesActions,\n      typesLingesDataService,\n      typesLingesService\n    );\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { TypeLinge } from 'src/app/models/models.interfaces';\nimport { EntitiesReducer } from 'src/app/modules/servicesModules/modules.ngrx.reducer';\nimport { TypesLingesActions } from './typesLinges.actions';\nimport { ITypesLingesState } from './typesLinges.state';\n\nclass TypesLingesReducer extends EntitiesReducer<TypeLinge, ITypesLingesState> {\n  constructor(typesLingesActions: TypesLingesActions) {\n    super(typesLingesActions, 'type linge');\n  }\n}\n\n//TODO GET  REDUCER  POUR LE STOOR AVEC PARTERN SINGLETON AFIN D'AVOIR UNE SEULE INSTANCE\nexport class GetTypesLingesReducer {\n  private static intanceTypesLingesReducer: TypesLingesReducer = null;\n  public static getReducer(state: ITypesLingesState, action: Action) {\n    if (GetTypesLingesReducer.intanceTypesLingesReducer == null) {\n      GetTypesLingesReducer.intanceTypesLingesReducer = new TypesLingesReducer(\n        new TypesLingesActions()\n      );\n    }\n    return GetTypesLingesReducer.intanceTypesLingesReducer.entitiesFeactureReducer()(\n      state,\n      action\n    );\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NameUrlEntitiesAPI } from 'src/app/api.config';\nimport { TypeLinge } from 'src/app/models/models.interfaces';\nimport { EntitiesDataService } from 'src/app/modules/servicesModules/modules.data.service';\n\n@Injectable()\nexport class TypesLingesDataService extends EntitiesDataService<TypeLinge> {\n  constructor(httpClient: HttpClient) {\n    super(httpClient, NameUrlEntitiesAPI.typesLinges);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntitiesDataState } from 'src/app/modules/servicesModules/modules.entitiesDataState';\nimport { EntitiesService } from 'src/app/modules/servicesModules/modules.service';\nimport { RoutesNames } from 'src/app/routes.config';\n\n@Injectable()\nexport class TypesLingesService extends EntitiesService {\n  constructor(router: Router, entitiesDataState: EntitiesDataState) {\n    super(router, RoutesNames.typesLinges, entitiesDataState);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TypesPage } from './types.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TypesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TypesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { TypesPageRoutingModule } from './types-routing.module';\nimport { TypesPage } from './types.page';\nimport { TypesLingesDataService } from './services/typesLinges.data.service';\nimport { TypesLingesService } from './services/typesLinges.service';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TypesLingesEffects } from './ngrx/typesLinges.effects';\nimport { StoreModule } from '@ngrx/store';\nimport { GetTypesLingesReducer } from './ngrx/typesLinges.reducer';\nimport { NameStateEntities } from 'src/app/appState/app.state';\nimport { ShearedModulesModule } from 'src/app/sheared-modules/sheared-modules.module';\n\n@NgModule({\n  imports: [\n    ShearedModulesModule,\n    TypesPageRoutingModule,\n    StoreModule.forFeature(\n      NameStateEntities.typeLinge,\n      GetTypesLingesReducer.getReducer\n    ),\n    EffectsModule.forFeature([TypesLingesEffects]),\n  ],\n  declarations: [TypesPage],\n  providers: [TypesLingesDataService, TypesLingesService],\n})\nexport class TypesPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState, AppStateEnum } from 'src/app/appState/app.state';\nimport { TypeLinge } from 'src/app/models/models.interfaces';\nimport { RoutesNames } from 'src/app/routes.config';\nimport { TypesLingesActions } from './ngrx/typesLinges.actions';\nimport { TypesLingesSelectors } from './ngrx/typesLinges.selectors';\n\n@Component({\n  selector: 'app-types',\n  templateUrl: './types.page.html',\n  styleUrls: ['./types.page.scss'],\n})\nexport class TypesPage implements OnInit, OnDestroy {\n  readonly routesNames = RoutesNames;\n  typesLinges: TypeLinge[];\n  notification$: Observable<string> = new Observable();\n  errorMessage$: Observable<string> = new Observable();\n  dataState$: Observable<AppStateEnum> = new Observable();\n  sub: Subscription = new Subscription();\n\n  constructor(\n    private store: Store<AppState>,\n    private typesLingesActions: TypesLingesActions,\n    private typesLingesSelectors: TypesLingesSelectors\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(this.typesLingesActions.getAllEntities()());\n    this.subTypesLinges();\n    this.dataState$ = this.store.select(\n      this.typesLingesSelectors.getDataState()\n    );\n    this.notification$ = this.store.select(\n      this.typesLingesSelectors.getNotification()\n    );\n    this.errorMessage$ = this.store.select(\n      this.typesLingesSelectors.getMessageError()\n    );\n  }\n\n  //TODO SUBS AUX DATA TYPE\n  subTypesLinges() {\n    this.sub.add(\n      this.store.select(this.typesLingesSelectors.getEntities()).subscribe({\n        next: (dataTypesLinges) => {\n          if (dataTypesLinges) {\n            this.typesLinges = dataTypesLinges;\n          }\n        },\n      })\n    );\n  }\n\n  //TODO\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}